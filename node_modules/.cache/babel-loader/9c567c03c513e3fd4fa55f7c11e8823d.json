{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/naveenbisht/Desktop/code-all/frontendlayer/src/components/todo/List.js\";\nimport React, { Component } from 'react';\nimport { constants } from '../../utils/config';\nexport default class List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadNotes();\n  }\n\n  loadNotes() {\n    const options = {\n      mode: 'cors',\n      method: 'GET'\n    };\n    const promise = fetch(constants.LIST_NOTES_URL + \"?token=\" + localStorage.token, options);\n    promise.then(response => {\n      console.log('Response is ', response);\n      const p = response.json();\n      p.then(data => {\n        console.log('Data is ::::: ', data);\n        let arr = data.result;\n        this.setState({\n          notes: arr\n        });\n      }).catch(err => {\n        this.setState({\n          err: err\n        });\n        console.log('Error in JSON :::', err);\n      }).catch(err => {\n        this.setState({\n          err: err\n        });\n        console.log('Error in Call::: ', err);\n      });\n    });\n  }\n\n  render() {\n    let jsx = '';\n\n    if (this.state.notes.length == 0) {\n      jsx = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No Notes found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this);\n    } else {\n      jsx = this.state.notes.map((note, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: note.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: note.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          class: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Desc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: jsx\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/naveenbisht/Desktop/code-all/frontendlayer/src/components/todo/List.js"],"names":["React","Component","constants","List","constructor","props","state","notes","componentDidMount","loadNotes","options","mode","method","promise","fetch","LIST_NOTES_URL","localStorage","token","then","response","console","log","p","json","data","arr","result","setState","catch","err","render","jsx","length","map","note","index","name","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { constants } from '../../utils/config';\n\nexport default class List extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n          notes:[]\n        }\n\n\n    }\n\n    componentDidMount() {\n        this.loadNotes();\n    }\n\n    loadNotes(){\n      const options = {\n        mode:'cors',\n        method:'GET'\n\n\n    };\n      const promise = fetch(constants.LIST_NOTES_URL+\"?token=\"+localStorage.token,options);\n      promise.then(response=>{\n        console.log('Response is ',response);\n        const p = response.json();\n        p.then(data=>{\n          console.log('Data is ::::: ',data);\n          let arr = data.result;\n          this.setState({notes:arr});\n        }).catch(err=>{\n          this.setState({err:err});\n          console.log('Error in JSON :::',err);\n        }).catch(err=>{\n          this.setState({err:err});\n          console.log('Error in Call::: ',err);\n        })\n      })\n    }\n\n\n\n\n\n    render() {\n      let jsx = '';\n      if(this.state.notes.length==0){\n        jsx = <h1>No Notes found...</h1>;\n      }\n      else{\n        jsx = this.state.notes.map((note,index)=>{\n        return (<tr key={index}>\n                  <td>{index+1}</td>\n                  <td>{note.name}</td>\n                  <td>{note.desc}</td>\n                  </tr>)\n        })\n      }\n        return (\n            <>\n              <h1>List of Notes</h1>\n              <table class=\"table\">\n  <thead class=\"thead-dark\">\n    <tr>\n\n      <th scope=\"col\">Id</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Desc</th>\n    </tr>\n  </thead>\n  <tbody>\n            <>\n            {jsx}\n            </>\n  </tbody>\n</table>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}