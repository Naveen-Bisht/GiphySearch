{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/naveenbisht/Documents/WebDev/Giphy Search/src/components/SearchList.js\";\nimport React from 'react';\nimport { Picture } from './Picture';\nimport { View, FlatList, Image } from 'react-native';\nexport const SearchList = props => {\n  let totalNumberOfRecords = props.imagedata.length;\n  console.log('Props Rec in List ', props.imagedata);\n\n  const noRecordFoundJSX = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Record Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 30\n  }, this);\n\n  const successJSX = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"List of Records \", totalNumberOfRecords]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), props.imagedata.map(ele => /*#__PURE__*/_jsxDEV(Picture, {\n      url: ele.images.original.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 35\n    }, this)), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.view,\n      children: /*#__PURE__*/_jsxDEV(FlatList, {\n        data: gifs,\n        renderItem: ({\n          item\n        }) => /*#__PURE__*/_jsxDEV(Image, {\n          resizeMode: \"contain\",\n          style: styles.image,\n          source: {\n            uri: item.images.original.url\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.imagedata.length == 0 ? noRecordFoundJSX : successJSX\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = SearchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["/Users/naveenbisht/Documents/WebDev/Giphy Search/src/components/SearchList.js"],"names":["React","Picture","View","FlatList","Image","SearchList","props","totalNumberOfRecords","imagedata","length","console","log","noRecordFoundJSX","successJSX","map","ele","images","original","url","styles","view","gifs","item","image","uri"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,KAAxB,QAAoC,cAApC;AACA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAS;AAC/B,MAAIC,oBAAoB,GAAGD,KAAK,CAACE,SAAN,CAAgBC,MAA3C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCL,KAAK,CAACE,SAAvC;;AACA,QAAMI,gBAAgB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzB;;AACA,QAAMC,UAAU,gBACZ;AAAA,4BACA;AAAA,qCAAoBN,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAKCD,KAAK,CAACE,SAAN,CAAgBM,GAAhB,CAAoBC,GAAG,iBAAE,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,GAAG,CAACC,MAAJ,CAAWC,QAAX,CAAoBC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAzB,CALD,eAQA,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,6BAEF,QAAC,QAAD;AACE,QAAA,IAAI,EAAEC,IADR;AAEE,QAAA,UAAU,EAAE,CAAC;AAACC,UAAAA;AAAD,SAAD,kBACV,QAAC,KAAD;AACE,UAAA,UAAU,EAAC,SADb;AAEE,UAAA,KAAK,EAAEH,MAAM,CAACI,KAFhB;AAGE,UAAA,MAAM,EAAE;AAACC,YAAAA,GAAG,EAAEF,IAAI,CAACN,MAAL,CAAYC,QAAZ,CAAqBC;AAA3B;AAHV;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AAFE;AAAA;AAAA;AAAA;AAAA,YARA;AAAA,kBADJ;;AAwBA,sBACI;AAAA,cACKZ,KAAK,CAACE,SAAN,CAAgBC,MAAhB,IAAwB,CAAxB,GAA0BG,gBAA1B,GAA2CC;AADhD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjCM;KAAMR,U","sourcesContent":["import React from 'react';\nimport { Picture } from './Picture';\nimport {View, FlatList, Image} from 'react-native';\nexport const SearchList = (props)=>{\n    let totalNumberOfRecords = props.imagedata.length;\n    console.log('Props Rec in List ',props.imagedata);\n    const noRecordFoundJSX = <p>No Record Found</p>;\n    const successJSX = (\n        <>\n        <p>List of Records {totalNumberOfRecords}</p>\n        {/* for pixabay */}\n        {/* {props.imagedata.map(ele=><Picture key={ele.id} url={ele.largeImageURL}/>)}     */}\n        {/* for giphy */}\n        {props.imagedata.map(ele=><Picture url={ele.images.original.url}/>)}\n        {/* {props.imagedata.map(ele=><img src={ele.images.original.url}/>)} */}\n\n        <View style={styles.view}>\n    \n      <FlatList\n        data={gifs}\n        renderItem={({item}) => (\n          <Image\n            resizeMode='contain'\n            style={styles.image}\n            source={{uri: item.images.original.url}}\n          />\n        )}\n      />\n    </View>\n        </>\n    );\n    return (\n        <div>\n            {props.imagedata.length==0?noRecordFoundJSX:successJSX}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}